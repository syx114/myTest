buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        mavenLocal()
        maven { url 'http://nexus.yintai.org:8081/nexus/content/groups/public' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

group 'yintai'

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'docker'

jar {
    baseName = 'myTest'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava, compileGroovy, compileTestGroovy]*.options*.encoding = 'UTF-8'

repositories {
    mavenLocal()
    maven { url 'http://nexus.yintai.org:8081/nexus/content/groups/public' }
    mavenCentral()
}

dependencies {
    compile('org.codehaus.groovy:groovy')
    compile('org.springframework.boot:spring-boot-starter-jetty')
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile("org.elasticsearch:elasticsearch:2.4.1")
    compile('com.google.code.gson:gson:2.7')
    compile('org.nofdev:service-host-mvc:1.3.0')
    compile('org.nofdev:service-client-java:1.3.0')
    compile('ch.qos.logback.contrib:logback-jackson:0.1.5')
    compile('org.springframework.data:spring-data-elasticsearch:2.0.4.RELEASE')
    compile('ch.qos.logback.contrib:logback-json-classic:0.1.5')
    testCompile(
        'org.springframework.boot:spring-boot-starter-test',
        'org.spockframework:spock-core:1.0-groovy-2.4',
        'org.spockframework:spock-spring:1.0-groovy-2.4'
    )
    testCompile('org.mock-server:mockserver-netty:3.10.2')
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')

    doFirst {
        copy {
            from (jar) {
                include "*${version}.jar"
                rename "(.*)-${version}(.*)", 'app.jar'
            }
            into stageDir
        }
    }
    dryRun = true
}